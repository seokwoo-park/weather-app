{"version":3,"sources":["forest.png","cloud1.png","cloud2.png","cloud3.png","components/BackgroundDay.js","components/BackgroundNight.js","API/weather-api.js","redux/action.js","components/Input.js","components/WeatherInfo.js","App.js","reportWebVitals.js","index.js","redux/reducer.js"],"names":["BackgroundDay","className","src","forest","cloud1","cloud2","cloud3","BackgroundNight","weather_API","key","base","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAIL","Input","dispatch","useDispatch","useState","searchCity","setSearchCity","onSubmit","e","city","preventDefault","a","axios","post","then","res","console","log","data","response","main","icon","weather","desc","description","location","name","sys","country","type","payload","onChange","target","value","placeholder","WeatherInfo","useSelector","state","Object","keys","length","currentDate","Date","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","temp","App","slice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","allReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c915196.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/forest.255d2c5a.png\";","export default __webpack_public_path__ + \"static/media/cloud1.9ea80c62.png\";","export default __webpack_public_path__ + \"static/media/cloud2.a17796ff.png\";","export default __webpack_public_path__ + \"static/media/cloud3.db5d2dad.png\";","import React from 'react'\r\nimport '../css/BackgroundDay.css'\r\nimport forest from '../forest.png'\r\nimport cloud1 from '../cloud1.png'\r\nimport cloud2 from '../cloud2.png'\r\nimport cloud3 from '../cloud3.png'\r\n\r\n\r\nfunction BackgroundDay() {\r\n    return (\r\n        <div className=\"background-day\">\r\n            <div className=\"bg-day-sun\"></div>\r\n            <img className=\"bg-day-forest\" src={forest}/>\r\n            <img className=\"x1\" src={cloud1}/>\r\n            <img className=\"x2\" src={cloud2}/>\r\n            <img className=\"x3\" src={cloud3}/>\r\n            <img className=\"x4\" src={cloud1}/>\r\n            <img className=\"x5\" src={cloud2}/>\r\n            <img className=\"x6\" src={cloud3}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackgroundDay\r\n","import React from 'react'\r\nimport '../css/BackgroundNight.css'\r\nimport forest from '../forest.png'\r\nimport cloud1 from '../cloud1.png'\r\nimport cloud2 from '../cloud2.png'\r\nimport cloud3 from '../cloud3.png'\r\n\r\nfunction BackgroundNight() {\r\n\r\n    return (\r\n        <div className=\"background-night\">\r\n            <div className=\"bg-night-moon\"></div>\r\n            <img className=\"bg-night-forest\" src={forest}/>\r\n            <img className=\"x1\" src={cloud1}/>\r\n            <img className=\"x2\" src={cloud2}/>\r\n            <img className=\"x3\" src={cloud3}/>\r\n            <img className=\"x4\" src={cloud1}/>\r\n            <img className=\"x5\" src={cloud2}/>\r\n            <img className=\"x6\" src={cloud3}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackgroundNight\r\n","const weather_API = {\r\n    key :  \"80937b72a0c30a90f3a25061ac07bc67\",\r\n    base : \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\nexport default weather_API\r\n","import weather_API from'../API/weather-api'\r\nimport axios from 'axios'\r\n\r\nexport const FETCH_WEATHER_SUCCESS = 'FETCH_WEATHER_SUCCESS'\r\nexport const FETCH_WEATHER_FAIL = 'FETCH_WEATHER_FAIL'\r\n\r\nexport const fetchWeather = (weather)=>{\r\n    return {\r\n        type : FETCH_WEATHER_SUCCESS,\r\n        payload : weather\r\n    }\r\n}\r\n\r\nexport const failWeather = () => {\r\n    return {\r\n        type : FETCH_WEATHER_FAIL\r\n    }\r\n}\r\n\r\nexport const loadWeather = (city) => async(dispatch)=>{\r\n       await axios.post(`${weather_API.base}weather?q=${city}&appid=${weather_API.key}&units=metric`)\r\n        .then((res)=>{\r\n        console.log(res.data)\r\n        const response = {\r\n            ...res.data.main,\r\n            icon: res.data.weather[0].icon,\r\n            desc: res.data.weather[0].description,\r\n            main: res.data.weather[0].main,\r\n            location:`${res.data.name}, ${res.data.sys.country}`\r\n            \r\n        }\r\n        dispatch(fetchWeather(response))\r\n    })\r\n        console.log('loadWeather action')\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {loadWeather} from '../redux/action'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport '../css/input.css'\r\n\r\n\r\nfunction Input() {\r\n    const dispatch = useDispatch()\r\n    const [searchCity,setSearchCity] = useState(\"\");\r\n\r\n    const onChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        setSearchCity(e.target.value);\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loadWeather(searchCity))\r\n        setSearchCity('')\r\n        console.log('submit')\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"search-box\">\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input onChange={onChangeHandler} className=\"search-bar\" type=\"text\" placeholder=\"Search 'Tokyo'\" value={searchCity}/>\r\n                    <button><SearchIcon className=\"search-icon\"/></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input   ","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport '../css/weatherInfo.css'\r\n\r\nfunction WeatherInfo() {\r\n    const weather = useSelector(state => state.weather)\r\n    console.log(Object.keys(weather))\r\n\r\n    const dateBuilder = () => {\r\n        const days = [\"Sun\",\"Mon\",\"Tues\",\"Wed\",\"thurs\",\"Fri\",\"Sat\"];\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        let currentDate = new Date();\r\n        let day = days[currentDate.getDay()];\r\n        let date = currentDate.getDate();\r\n        let month = months[currentDate.getMonth()];\r\n        let year = currentDate.getFullYear();\r\n        \r\n        return `${day} ${date} ${month} ${year}`\r\n    }\r\n    \r\n\r\n    return (\r\n\r\n\r\n        <div className=\"weatherInfo-container\">\r\n            {\r\n                Object.keys(weather).length >=1 ?\r\n                <div>\r\n                    <div className=\"date-box\">{dateBuilder()}</div>\r\n                    <div className=\"location-box\"><LocationOnIcon/>{weather.location}</div>\r\n                    <div className=\"temp-box\">{weather.temp}Â°C</div>\r\n                    <div className=\"weather-box\">{weather.desc}</div>\r\n                    <img className=\"weather-icon\" src={`http://openweathermap.org/img/wn/${weather.icon}@4x.png`}/>\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default WeatherInfo\r\n","import { useSelector } from 'react-redux';\nimport './App.css';\nimport BackgroundDay from './components/BackgroundDay';\nimport BackgroundNight from './components/BackgroundNight';\nimport Input from './components/Input'\nimport WeatherInfo from './components/WeatherInfo';\n\nfunction App() {\n\n  const weather = useSelector(state => state.weather)\n\n  return (\n    <div className=\"App\">\n      {\n        weather?.icon?.slice(2)=== 'd' ?\n        <BackgroundDay/>\n        :\n        <BackgroundNight/>\n      }\n      <Input/>\n      <WeatherInfo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\nimport reducer from'./redux/reducer'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nconst allReducer = combineReducers({weather:reducer})\nconst store = createStore(allReducer,composeWithDevTools(applyMiddleware(thunk)))\nstore.subscribe(()=>console.log(store.getState()))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {FETCH_WEATHER_FAIL,FETCH_WEATHER_SUCCESS} from './action'\r\n\r\n\r\nexport default function reducer (state = {}, action) {\r\n    switch (action.type){\r\n        case FETCH_WEATHER_SUCCESS:\r\n            return {\r\n                ...action.payload\r\n            }\r\n\r\n        case FETCH_WEATHER_FAIL:\r\n            return{\r\n                ...action.payload\r\n            }\r\n        default :\r\n\r\n        return state\r\n    }\r\n}"],"sourceRoot":""}